/*
 * MIT License
 *
 * Copyright (c) 2020-present Cloudogu GmbH and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
  id 'java-library'
  id 'maven-publish'
  id 'idea'
  id 'org.cadixdev.licenser'
}

license {
  header = project.rootProject.file('LICENSE.txt')
  exclude '**/*.yml'
  exclude '**/*.yaml'
}

idea {
  module {
    downloadJavadoc = true
    downloadSources = true
  }
}

repositories {
  mavenLocal()
  maven {
    url = uri('https://packages.scm-manager.org/repository/public/')
  }
}

dependencies {
  testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
  testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
  testImplementation 'org.assertj:assertj-core:3.11.1'
}

java.sourceCompatibility = JavaVersion.VERSION_11

publishing {
  publications {
    maven(MavenPublication) {
      from(components.java)
    }
  }
  repositories {
    maven {
      String releasesRepoUrl = "https://packages.scm-manager.org/repository/releases/"
      String snapshotsRepoUrl = "https://packages.scm-manager.org/repository/snapshots/"
      url = version.endsWith("-SNAPSHOT")  ? snapshotsRepoUrl : releasesRepoUrl
      if (project.hasProperty("packagesScmManagerUsername") && project.hasProperty("packagesScmManagerPassword")) {
        credentials {
          username = project.property("packagesScmManagerUsername")
          password = project.property("packagesScmManagerPassword")
        }
      }
    }
  }
}

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}

tasks.getByName("check").configure {
  dependsOn "checkLicenses"
}

test {
  useJUnitPlatform {
  }
}
