/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Gradle plugin project to get you started.
 * For more details take a look at the Writing Custom Plugins chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.6.1/userguide/custom_plugins.html
 */


plugins {
  id 'java-gradle-plugin'
  id 'cloudogu.scm.java-conventions'
  id 'com.gradle.plugin-publish' version '0.12.0'
}

dependencies {
  implementation(gradleApi())
  implementation project(":lib")
}

gradlePlugin {
  // Define the plugin
  plugins {
    changelog {
      id = 'org.scm-manager.changelog'
      implementationClass = 'com.cloudogu.changelog.GradlePlugin'
    }
  }
}

// publish plugin
pluginBundle {
  website = 'https://scm-manager.org'
  vcsUrl = 'https://github.com/scm-manager/changelog'
  description = 'Plugin to manage changelog files'
  tags = ['scm-manager', 'changelog', 'markdown']
  plugins {
    changelog {
      displayName = 'Changelog Plugin'
    }
  }
}

// Add a source set for the functional test suite
sourceSets {
  functionalTest {
  }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

// Add a task to run the functional tests
tasks.register('functionalTest', Test) {
  testClassesDirs = sourceSets.functionalTest.output.classesDirs
  classpath = sourceSets.functionalTest.runtimeClasspath
  useJUnitPlatform()
}

check {
  // Run the functional tests as part of `check`
  dependsOn(tasks.functionalTest)
}

tasks.getByName("publish").configure {
  dependsOn "publishPlugins"
}
